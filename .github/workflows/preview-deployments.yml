name: Preview Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PY_ALL: 3.10 3.11 3.12 3.13 3.13t pypy3.10 pypy3.11

jobs:
  wheels:
    name: wheel ${{ matrix.platform || matrix.os }}(${ matrix.target }) - ${{ matrix.manylinux || 'auto' }} - ${{ matrix.allocator || 'auto' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        allocator: [auto]
        include:
          - os: ubuntu
            platform: linux
            target: x86_64
            interpreter: 3.10 3.11 3.12 3.13 pypy3.10 pypy3.11
          - os: ubuntu
            platform: linux
            target: x86_64
            interpreter: 3.13t
            allocator: mimalloc
          - os: ubuntu
            platform: linux
            target: i686
            interpreter: 3.10 3.11 3.12 3.13
          - os: ubuntu
            platform: linux
            target: aarch64
            container: ghcr.io/rust-cross/manylinux_2_28-cross:aarch64
            interpreter: 3.10 3.11 3.12 3.13 pypy3.10 pypy3.11
          - os: ubuntu
            platform: linux
            target: aarch64
            container: ghcr.io/rust-cross/manylinux_2_28-cross:aarch64
            interpreter: 3.13t
            allocator: mimalloc
          - os: ubuntu
            platform: linux
            target: armv7
            interpreter: 3.10 3.11 3.12 3.13
          - os: ubuntu
            platform: linux
            target: x86_64
            manylinux: musllinux_1_1
            allocator: mimalloc
          - os: ubuntu
            platform: linux
            target: aarch64
            manylinux: musllinux_1_1
            allocator: mimalloc
          - os: ubuntu
            platform: linux
            target: armv7
            manylinux: musllinux_1_1
            allocator: mimalloc
          - os: macos
            target: x86_64
            interpreter: 3.10 3.11 3.12 3.13 pypy3.10 pypy3.11
          - os: macos
            target: x86_64
            interpreter: 3.13t
            allocator: mimalloc
          - os: macos
            target: aarch64
            interpreter: 3.10 3.11 3.12 3.13 pypy3.10 pypy3.11
          - os: macos
            target: aarch64
            interpreter: 3.13t
            allocator: mimalloc
          - os: windows
            target: x86_64
            interpreter: 3.10 3.11 3.12 3.13 pypy3.10 pypy3.11
          - os: windows
            target: x86_64
            interpreter: 3.13t
            allocator: mimalloc
        exclude:
          - os: windows
            target: aarch64

    runs-on: ${{ matrix.os }}-latest
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Ubuntu
        if: matrix.os == 'ubuntu' && matrix.container == ''
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Install dependencies for manylinux container
        if: matrix.container != ''
        run: |
          yum install -y openssl-devel pkgconf
          # Ensure pkg-config can find openssl
          export PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH

      - name: Install dependencies for macOS
        if: matrix.os == 'macos'
        run: |
          brew install openssl@3 pkg-config
          # Link OpenSSL to pkg-config
          export PKG_CONFIG_PATH=/usr/local/opt/openssl@3/lib/pkgconfig:$PKG_CONFIG_PATH

      - name: Install dependencies for Windows
        if: matrix.os == 'windows'
        run: |
          # Use vcpkg to install OpenSSL
          vcpkg install openssl:x64-windows
          # Set OPENSSL_DIR for Windows
          echo "OPENSSL_DIR=C:\vcpkg\installed\x64-windows" >> $GITHUB_ENV

      - name: Set jemalloc for aarch64 Linux
        if: matrix.target == 'aarch64' && matrix.os == 'ubuntu'
        run: |
          echo "JEMALLOC_SYS_WITH_LG_PAGE=16" >> $GITHUB_ENV

      - uses: pyo3/maturin-action@v1
        if: matrix.allocator != 'mimalloc'
        with:
          rust-toolchain: stable
          command: build
          args: --release --out dist --interpreter ${{ matrix.interpreter || env.PY_ALL }}
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          container: ${{ matrix.container }}
          docker-options: -e CI -e PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH

      - uses: pyo3/maturin-action@v1
        if: matrix.allocator == 'mimalloc'
        with:
          rust-toolchain: stable
          command: build
          args: --release --out dist --features mimalloc --interpreter ${{ matrix.interpreter || env.PY_ALL }}
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          container: ${{ matrix.container }}
          docker-options: -e CI -e PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.platform || matrix.os }}-${{ matrix.target }}-${{ matrix.manylinux || 'auto' }}-${{ matrix.allocator || 'auto' }}
          path: dist